version: '3.7'

services:
  client-service:
    ports:
      - "50050:80"
    build:
      context: src/
      dockerfile: ProjectG.ClientService/ProjectG.ClientService.Web/Dockerfile
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      CustomerApi__GraphQLEndpoint: "http://customer-read-api:80/graphql/customer"
      BasketApi__GraphQLEndpoint: "http://basket-api:80/graphql/basket"
      ProductApi__GraphQLEndpoint: "http://product-read-api:80/graphql/product"

  order-write-api:
    ports:
      - "50051:80"
    build:
      context: src/
      dockerfile: ProjectG.OrderService/ProjectG.OrderService.WriteApi/Dockerfile
    depends_on:
      - order-db-postgresql-master
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=order-db-postgresql-master;Port=5432;Username=postgres;Password=order_password;Database=order_db"

  order-read-api:
    ports:
      - "50052:80"
    build:
      context: src/
      dockerfile: ProjectG.OrderService/ProjectG.OrderService.ReadApi/Dockerfile
    depends_on:
      - order-db-postgresql-slave
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=order-db-postgresql-slave;Port=5433;Username=postgres;Password=order_password;Database=order_db"

  customer-write-api:
    ports:
      - "50053:80"
    build:
      context: src/
      dockerfile: ProjectG.CustomerService/ProjectG.CustomerService.WriteApi/Dockerfile
    depends_on: 
      - customer-db-postgresql
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=customer-db-postgresql;Port=5435;Username=postgres;Password=customer_password;Database=customer_db"

  customer-read-api:
    ports:
      - "50054:80"
    build:
      context: src/
      dockerfile: ProjectG.CustomerService/ProjectG.CustomerService.ReadApi/Dockerfile
    depends_on: 
      - customer-db-postgresql
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=customer-db-postgresql;Port=5435;Username=postgres;Password=customer_password;Database=customer_db"

  product-read-api:
    ports:
      - "50055:80"
    build:
      context: src/
      dockerfile: ProjectG.ProductService/ProjectG.ProductService.ReadApi/Dockerfile
    depends_on: 
      - product-db-postgresql
      - product-redis
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=product-db-postgresql;Port=5434;Username=postgres;Password=product_password;Database=product_db"
      ConnectionStrings__Redis: "product-redis:6379,password=products_password"

  product-write-api:
    ports: 
      - "50056:80"
    build: 
      context: src/
      dockerfile: ProjectG.ProductService/ProjectG.ProductService.WriteApi/Dockerfile
    depends_on: 
      - product-db-postgresql
      - product-redis
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=product-db-postgresql;Port=5434;Username=postgres;Password=product_password;Database=product_db"
      ConnectionStrings__Redis: "product-redis:6379,password=products_password"

  basket-api:
    ports:
      - "50058:80"
    build:
      context: src/
      dockerfile: ProjectG.BasketService/ProjectG.BasketService.Api/Dockerfile
    depends_on: 
      - basket-db-postgresql
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=basket-db-postgresql;Port=5436;Username=postgres;Password=basket_password;Database=basket_db"

  product-redis:
    image: 'bitnami/redis:latest'
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=products_password

  order-db-postgresql-master:
    image: 'bitnami/postgresql:latest'
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_PORT_NUMBER=5432
      - POSTGRESQL_PASSWORD=order_password
      - POSTGRESQL_DATABASE=order_db
      - POSTGRESQL_SYNCHRONOUS_COMMIT_MODE=on
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
  order-db-postgresql-slave:
    image: 'bitnami/postgresql:latest'
    ports:
      - "5433:5433"
    depends_on:
      - order-db-postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=order-db-postgresql-master
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - POSTGRESQL_PORT_NUMBER=5433
      - POSTGRESQL_PASSWORD=order_password
      - POSTGRESQL_DATABASE=order_db

  product-db-postgresql:
    image: 'bitnami/postgresql:latest'
    ports:
      - "5434:5434"
    environment:
      - POSTGRESQL_PORT_NUMBER=5434
      - POSTGRESQL_PASSWORD=product_password
      - POSTGRESQL_DATABASE=product_db
  
  customer-db-postgresql:
    image: 'bitnami/postgresql:latest'
    ports:
      - "5435:5435"
    environment:
      - POSTGRESQL_PORT_NUMBER=5435
      - POSTGRESQL_PASSWORD=customer_password
      - POSTGRESQL_DATABASE=customer_db

  basket-db-postgresql:
    image: 'bitnami/postgresql:latest'
    ports:
      - "5436:5436"
    environment:
      - POSTGRESQL_PORT_NUMBER=5436
      - POSTGRESQL_PASSWORD=basket_password
      - POSTGRESQL_DATABASE=basket_db

  # rabbitmq:
  #   image: bitnami/rabbitmq:latest
  #   ports:
  #     - "15672:15672"
  #   environment:
  #     - RABBITMQ_USERNAME=g_user
  #     - RABBITMQ_PASSWORD=g_password
  #     - RABBITMQ_ERL_COOKIE=Jahsbjt5hjh

  # zookeeper:
  #   image: 'bitnami/zookeeper:latest'
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   depends_on: 
  #     - zookeeper